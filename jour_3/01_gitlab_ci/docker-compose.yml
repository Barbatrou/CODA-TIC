version: '3.8'

services:
  gitlab:
    image: gitlab/gitlab-ce:latest
    container_name: gitlab
    restart: always
    hostname: gitlab.local
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'http://0.0.0.0'
        gitlab_rails['gitlab_shell_ssh_port'] = 2222
        gitlab_rails['initial_root_password'] = 's3cur3P4ssw0rd'
        gitlab_rails['monitoring_whitelist'] = ['0.0.0.0/0']

        # Enable Container Registry
        registry_external_url 'http://0.0.0.0:5050'
        gitlab_rails['registry_enabled'] = true
        registry['enable'] = true
        registry['registry_http_addr'] = "0.0.0.0:5000"
        registry_nginx['enable'] = true
        registry_nginx['listen_port'] = 5050
    ports:
      - '80:80'
      - '443:443'
      - '2222:22'
      - '5050:5050'
    volumes:
      - './gitlab/config:/etc/gitlab'
      - './gitlab/logs:/var/log/gitlab'
      - './gitlab/data:/var/opt/gitlab'
    shm_size: '256m'
    network_mode: "host"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/-/health"]
      interval: 30s
      timeout: 10s
      retries: 10

  gitlab-runner:
    image: gitlab/gitlab-runner:latest
    container_name: gitlab-runner
    restart: always
    volumes:
      - './gitlab-runner/config:/etc/gitlab-runner'
      - '/var/run/docker.sock:/var/run/docker.sock'
      - './register_runner_and_run.sh:/register_runner_and_run.sh:ro'
    environment:
      - GITLAB_URL=http://0.0.0.0
      - GITLAB_PERSONAL_ACCESS_TOKEN=${GITLAB_PERSONAL_ACCESS_TOKEN}
    depends_on:
      gitlab:
        condition: service_healthy
    network_mode: "host"
    entrypoint: /bin/bash
    command: ["/register_runner_and_run.sh"]

